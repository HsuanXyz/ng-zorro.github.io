webpackJsonp([39],{JRJi:function(n,o,t){"use strict";t.d(o,"a",function(){return r});var r=function(){function n(){}return n}()},X5oD:function(n,o,t){"use strict";Object.defineProperty(o,"__esModule",{value:!0});var r=t("/oeL"),a=t("mHLU"),u=t("etJB"),l=t("qbdv"),e=t("jlvU"),p=t("BkNc"),i=t("JRJi"),c=t("1n7c"),d=t("ooXy");t.d(o,"NzIntroGetStartedModuleNgFactory",function(){return s});var s=r.b(a.a,[],function(n){return r.c([r.d(512,r.e,r.f,[[8,[u.a]],[3,r.e],r.g]),r.d(4608,l.a,l.b,[r.h]),r.d(512,l.d,l.d,[]),r.d(512,e.a,e.a,[]),r.d(512,p.x,p.x,[[2,p.m],[2,p.c]]),r.d(512,i.a,i.a,[]),r.d(512,c.a,c.a,[]),r.d(512,a.a,a.a,[]),r.d(1024,p.t,function(){return[[{path:"",component:d.a}]]},[])])})},etJB:function(n,o,t){"use strict";function r(n){return u.J(0,[(n()(),u.K(0,null,null,1,"nz-markdown",[],null,null,null,l.a,l.b)),u.M(4308992,null,0,e.a,[u.N],{nzContent:[0,"nzContent"]},null),(n()(),u.L(null,["\n"]))],function(n,o){n(o,1,0,o.component._markdownCode)},null)}function a(n){return u.J(0,[(n()(),u.K(0,null,null,1,"nz-intro-get-started",[],null,null,null,r,c)),u.M(49152,null,0,p.a,[],null,null)],null,null)}var u=t("/oeL"),l=t("yhcn"),e=t("AXbG"),p=t("ooXy");t.d(o,"a",function(){return d});var i=[],c=u.I({encapsulation:2,styles:i,data:{}}),d=u.Q("nz-intro-get-started",p.a,a,{},{},[])},fSfT:function(n,o){n.exports="快速上手\n===\nNG ZORRO 致力于提供给Angular开发者**愉悦**的开发体验。\n\n---\n> 官方指南假设你已经拥有已有 HTML、CSS 和 JavaScript 中级前端知识并且对 Angular框架足够了解。如果你刚开始学习前端或者Angular，将组件作为第一步可能并不是一个好主意，推荐先学习 <a href=\"http://www.angular.cn\" target=\"_blank\">Angular</a> 和 <a href=\"https://www.typescriptlang.org/\" target=\"_blank\">TypeScript</a>。\n\n\n## 标准开发\n\n实际项目开发中，你会需要对 TypeScript 代码的构建、调试、代理、打包部署等一系列工程化的需求。\n我们强烈建议使用官方的`@angular/cli`工具链辅助进行开发，下面我们用一个简单的实例来说明。\n\n### 1. 安装脚手架工具\n\n> 使用 `@angular/cli` 前，务必确认 [Node.js](https://nodejs.org/en/) 已经升级到 v6.9 或以上。\n\n```bash\n$ npm install -g @angular/cli@latest\n```\n\n更多功能请参考 [脚手架工具](https://github.com/angular/angular-cli) 和 [CLI Wiki](https://github.com/angular/angular-cli/wiki)。\n\n### 2. 创建一个项目\n\n在创建项目之前，请确保`@angular/cli`已被成功安装\n```bash\nng new PROJECT_NAME\n```\n\n@angular/cli会自动生成一个名称为PROJECT_NAME的文件夹，并自动安装好相应依赖\n\n### 3. 使用组件\n\n现在项目下安装ng-zorro-antd\n```bash\n$ cd PROJECT_NAME\n$ npm install ng-zorro-antd --save\n```\n\n直接用下面的代码替换 `/src/app/app.module.ts` 的内容\n\n```typescript\nimport { BrowserModule } from '@angular/platform-browser';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { NgModule } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\nimport { HttpModule } from '@angular/http';\nimport { NgZorroAntdModule } from 'ng-zorro-antd';\nimport { AppComponent } from './app.component';\n\n@NgModule({\n  declarations: [\n    AppComponent\n  ],\n  imports: [\n    BrowserModule,\n    FormsModule,\n    HttpModule,\n    BrowserAnimationsModule,\n    NgZorroAntdModule.forRoot()\n  ],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n\n```\n这样就成功在全局引入了ng-zorro-antd\n\n> 注意，在根module中import组件时使用`NgZorroAntdModule.forRoot()`，在子module中import时使用`NgZorroAntdModule`即可\n\n用下面的代码替换 `/src/app/app.component.html`\n\n> 请注意务必要引入`nz-root`根组件，否则部分组件将不能正常工作\n\n```html\n\x3c!--引入根组件--\x3e\n<nz-root>\n  <button nz-button [nzType]=\"'primary'\">测试按钮</button>\n</nz-root>\n```\n查看最简单的Button效果\n\n> `nz-root`必须放置在根component`(app.component.html)`中，而不是替换`app-root`，并且只能引入一次\n\n\n### 4. 开发调试\n\n一键启动调试\n\n```bash\n$ ng serve --port 0 --open\n```\n\n如果需要实时调试AOT效果，请使用以下命令启动\n\n```bash\n$ ng serve --port 0 --open --aot\n```\n\n### 5. 构建和部署\n\n```bash\n$ ng build --prod\n```\n\n入口文件会构建到 `dist` 目录中，你可以自由部署到不同环境中进行引用。\n\n\n\n## 了解更多\n\n如果你想了解更多CLI工具链的功能和命令，建议访问[Angular CLI](https://github.com/angular/angular-cli)了解更多\n"},mHLU:function(n,o,t){"use strict";t.d(o,"a",function(){return r});var r=function(){function n(){}return n}()},ooXy:function(n,o,t){"use strict";t.d(o,"a",function(){return r});var r=function(){function n(){this._markdownCode=t("fSfT")}return n.ctorParameters=function(){return[]},n}()}});